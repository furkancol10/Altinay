@page "/project"
@using Volo.Abp.Application.Dtos
@using Altinay.Projects
@using Altinay.Localization
@using Microsoft.Extensions.Localization
@using Volo.Abp.AspNetCore.Components.Web
@inject AbpBlazorMessageLocalizerHelper<AltinayResource> LH
@inject IStringLocalizer<AltinayResource> L
@inherits AbpCrudPageBase<IProjectAppService, ProjectDto, Guid, PagedAndSortedResultRequestDto, CreateUpdateProjectDto>

<Card >
    <CardHeader>
        <Row Class="justify-content-between">
            <Column ColumnSize="ColumnSize.IsAuto">
                <h2>@L["Projects"]</h2>
            </Column>
            <Column ColumnSize="ColumnSize.IsAuto">
                <Button Color="Color.Primary" Clicked="OpenCreateModalAsync">@L["NewProject"]</Button>
            </Column>
        </Row>
    </CardHeader>
    <CardBody>
        <DataGrid TItem="ProjectDto"
        Data="Entities"
        ReadData="OnDataGridReadAsync"
        CurrentPage="CurrentPage"
        TotalItems="TotalCount"
        ShowPager="true"
        PageSize="PageSize">
            <DataGridColumns>
                <DataGridEntityActionsColumn TItem="ProjectDto" @ref="@EntityActionsColumn">
                    <DisplayTemplate>
                        <EntityActions TItem="ProjectDto" EntityActionsColumn="@EntityActionsColumn">
                            <EntityAction TItem="ProjectDto"
                            Text="@L["Edit"]"
                            Clicked="() => OpenEditModalAsync(context)" />
                            <EntityAction TItem="ProjectDto"
                            Text="@L["Delete"]"
                            Clicked="() => DeleteEntityAsync(context)"
                            ConfirmationMessage="()=>GetDeleteConfirmationMessage(context)" />
                        </EntityActions>
                    </DisplayTemplate>
                </DataGridEntityActionsColumn>

                <!-- Use Id property as the PK -->
                <DataGridColumn TItem="ProjectDto"
                Field="@nameof(ProjectDto.Id)"
                Caption="@L["ProjectCode"]" />

                <DataGridColumn TItem="ProjectDto"
                Field="@nameof(ProjectDto.ProjectName)"
                Caption="@L["ProjectName"]" />

                <DataGridColumn TItem="ProjectDto"
                Field="@nameof(ProjectDto.ProjectDescription)"
                Caption="@L["ProjectDescription"]" />
            </DataGridColumns>
        </DataGrid>
    </CardBody>
</Card>

<!-- Create Modal -->
<Modal @ref="@CreateModal">
    <ModalBackdrop />
    <ModalContent IsCentered="true">
        <Form>
            <ModalHeader>
                <ModalTitle>@L["NewProject"]</ModalTitle>
                <CloseButton Clicked="CloseCreateModalAsync" />
            </ModalHeader>
            <ModalBody>
                <Validations @ref="@CreateValidationsRef" Model="@NewEntity" ValidateOnLoad="false">

                    <Field>
                        <FieldLabel>@L["ProjectCode"]</FieldLabel>
                        <TextEdit @bind-Text="@NewEntity.ProjectCode" Rows="4" />
                    </Field>

                    <Validation MessageLocalizer="@LH.Localize">
                        <Field>
                            <FieldLabel>@L["ProjectName"]</FieldLabel>
                            <TextEdit @bind-Text="@NewEntity.ProjectName">
                                <Feedback><ValidationError /></Feedback>
                            </TextEdit>
                        </Field>
                    </Validation>

                    <Field>
                        <FieldLabel>@L["ProjectDescription"]</FieldLabel>
                        <TextEdit @bind-Text="@NewEntity.ProjectDescription" Rows="4" />
                    </Field>              

                </Validations>
            </ModalBody>
            <ModalFooter>
                <Button Color="Color.Secondary" Clicked="CloseCreateModalAsync">@L["Cancel"]</Button>
                <Button Color="Color.Primary"
                Type="@ButtonType.Submit"
                PreventDefaultOnSubmit="true"
                Clicked="CreateEntityAsync">@L["Save"]</Button>
            </ModalFooter>
        </Form>
    </ModalContent>
</Modal>

<!-- Edit Modal -->
<Modal @ref="@EditModal">
    <ModalBackdrop />
    <ModalContent IsCentered="true">
        <Form>
            <ModalHeader>
                <ModalTitle>@EditingEntity?.ProjectName</ModalTitle>
                <CloseButton Clicked="CloseEditModalAsync" />
            </ModalHeader>
            <ModalBody>
                <Validations @ref="@EditValidationsRef" Model="@EditingEntity" ValidateOnLoad="false">
                    <Validation MessageLocalizer="@LH.Localize">
                        <Field>
                            <FieldLabel>@L["ProjectName"]</FieldLabel>
                            <TextEdit @bind-Text="@EditingEntity.ProjectName">
                                <Feedback><ValidationError /></Feedback>
                            </TextEdit>
                        </Field>
                    </Validation>

                    <Field>
                        <FieldLabel>@L["ProjectDescription"]</FieldLabel>
                        <TextEdit @bind-Text="@EditingEntity.ProjectDescription" Rows="4" />
                    </Field>

                </Validations>
            </ModalBody>
            <ModalFooter>
                <Button Color="Color.Secondary" Clicked="CloseEditModalAsync">@L["Cancel"]</Button>
                <Button Color="Color.Primary"
                Type="@ButtonType.Submit"
                PreventDefaultOnSubmit="true"
                Clicked="UpdateEntityAsync">@L["Save"]</Button>
            </ModalFooter>
        </Form>
    </ModalContent>
</Modal>


